// https://open.kattis.com/problems/4thought

#include<bits/stdc++.h>
using namespace std;

#define intll long long
#define endl '\n'
#define TEST_CASE true

template<typename T>
void PRINT(vector<T>& arr) {
    for (int i = 0; i < int(arr.size()); i++)
        cout << arr[i] << " \n"[i == int(arr.size()) - 1];
}

// Generated by bruteforce using next_permutation, python and bash
vector<pair<string, int>> ANS{
    {"4*4-4*4=", 0},
    {"4*4/4/4=", 1},
    {"4-4-4/4=", -1},
    {"4*4-4/4=", 15},
    {"4/4-4*4=", -15},
    {"4*4+4-4=", 16},
    {"4-4*4-4=", -16},
    {"4*4+4/4=", 17},
    {"4/4+4/4=", 2},
    {"4*4+4+4=", 24},
    {"4*4*4*4=", 256},
    {"4*4+4*4=", 32},
    {"4*4*4-4=", 60},
    {"4-4*4*4=", -60},
    {"4*4*4+4=", 68},
    {"4+4-4/4=", 7},
    {"4/4-4-4=", -7},
    {"4*4-4-4=", 8},
    {"4+4-4*4=", -8},
    {"4/4+4+4=", 9},
    {"4/4/4-4=", -4},
    {"4-4/4/4=", 4}
};

void solution() {

    int n;
    cin >> n;

    for (auto [ans, N] : ANS) {
        if (N == n) {
            for (auto i : ans)
                cout << i << " ";
            cout << n << endl;
            return;
        }
    }

    cout << "no solution" << endl;
}

int32_t main() {

    ios::sync_with_stdio(false) ; cin.tie(0) ;

    int t_c = 1, tt_c = 1;
    if (TEST_CASE) cin >> t_c;

    while (t_c--) {
        // cout << "Case " << tt_c++ << ": ";
        solution();
        // if (t_c) cout << '\n';
    }

    return 0;
}